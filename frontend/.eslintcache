[{"D:\\Code\\fyp\\frontend\\src\\index.js":"1","D:\\Code\\fyp\\frontend\\src\\App.js":"2","D:\\Code\\fyp\\frontend\\src\\store.js":"3","D:\\Code\\fyp\\frontend\\src\\screens\\HomeScreen.js":"4","D:\\Code\\fyp\\frontend\\src\\screens\\PaymentScreen.js":"5","D:\\Code\\fyp\\frontend\\src\\screens\\ProductScreen.js":"6","D:\\Code\\fyp\\frontend\\src\\screens\\CartScreen.js":"7","D:\\Code\\fyp\\frontend\\src\\components\\Header.js":"8","D:\\Code\\fyp\\frontend\\src\\components\\footer.js":"9","D:\\Code\\fyp\\frontend\\src\\screens\\RegisterScreen.js":"10","D:\\Code\\fyp\\frontend\\src\\screens\\LoginScreen.js":"11","D:\\Code\\fyp\\frontend\\src\\screens\\ProfileScreen.js":"12","D:\\Code\\fyp\\frontend\\src\\screens\\ShippingScreen.js":"13","D:\\Code\\fyp\\frontend\\src\\screens\\PlaceOrderScreen.js":"14","D:\\Code\\fyp\\frontend\\src\\reducers\\productReducers.js":"15","D:\\Code\\fyp\\frontend\\src\\reducers\\orderReducers.js":"16","D:\\Code\\fyp\\frontend\\src\\reducers\\cartReducers.js":"17","D:\\Code\\fyp\\frontend\\src\\reducers\\userReducers.js":"18","D:\\Code\\fyp\\frontend\\src\\components\\product.js":"19","D:\\Code\\fyp\\frontend\\src\\components\\Loader.js":"20","D:\\Code\\fyp\\frontend\\src\\actions\\productActions.js":"21","D:\\Code\\fyp\\frontend\\src\\components\\CheckoutSteps.js":"22","D:\\Code\\fyp\\frontend\\src\\actions\\cartActions.js":"23","D:\\Code\\fyp\\frontend\\src\\components\\FormContainer.js":"24","D:\\Code\\fyp\\frontend\\src\\components\\Rating.js":"25","D:\\Code\\fyp\\frontend\\src\\actions\\userActions.js":"26","D:\\Code\\fyp\\frontend\\src\\actions\\orderActions.js":"27","D:\\Code\\fyp\\frontend\\src\\constants\\userConstants.js":"28","D:\\Code\\fyp\\frontend\\src\\constants\\orderConstants.js":"29","D:\\Code\\fyp\\frontend\\src\\constants\\cartConstants.js":"30","D:\\Code\\fyp\\frontend\\src\\constants\\productConstants.js":"31","D:\\Code\\fyp\\frontend\\src\\screens\\OrderScreen.js":"32"},{"size":315,"mtime":1643981981547,"results":"33","hashOfConfig":"34"},{"size":1611,"mtime":1649170851715,"results":"35","hashOfConfig":"34"},{"size":1774,"mtime":1649174795281,"results":"36","hashOfConfig":"34"},{"size":1093,"mtime":1643956289902,"results":"37","hashOfConfig":"34"},{"size":1594,"mtime":1648982542145,"results":"38","hashOfConfig":"34"},{"size":5761,"mtime":1649078755010,"results":"39","hashOfConfig":"34"},{"size":4704,"mtime":1649078861083,"results":"40","hashOfConfig":"34"},{"size":2070,"mtime":1648978454157,"results":"41","hashOfConfig":"34"},{"size":399,"mtime":1638636152752,"results":"42","hashOfConfig":"34"},{"size":3431,"mtime":1647088053467,"results":"43","hashOfConfig":"34"},{"size":2261,"mtime":1647073450629,"results":"44","hashOfConfig":"34"},{"size":5525,"mtime":1648442665042,"results":"45","hashOfConfig":"34"},{"size":3199,"mtime":1649078525889,"results":"46","hashOfConfig":"34"},{"size":7165,"mtime":1649170558324,"results":"47","hashOfConfig":"34"},{"size":1044,"mtime":1643956873922,"results":"48","hashOfConfig":"34"},{"size":1830,"mtime":1649174775602,"results":"49","hashOfConfig":"34"},{"size":1312,"mtime":1649084096809,"results":"50","hashOfConfig":"34"},{"size":2286,"mtime":1648442508077,"results":"51","hashOfConfig":"34"},{"size":1123,"mtime":1648971981383,"results":"52","hashOfConfig":"34"},{"size":465,"mtime":1643716807693,"results":"53","hashOfConfig":"34"},{"size":1264,"mtime":1646754658079,"results":"54","hashOfConfig":"34"},{"size":1399,"mtime":1648780595825,"results":"55","hashOfConfig":"34"},{"size":1274,"mtime":1649078753176,"results":"56","hashOfConfig":"34"},{"size":299,"mtime":1647071813367,"results":"57","hashOfConfig":"34"},{"size":1613,"mtime":1643526998755,"results":"58","hashOfConfig":"34"},{"size":3972,"mtime":1648442617858,"results":"59","hashOfConfig":"34"},{"size":2873,"mtime":1649175247066,"results":"60","hashOfConfig":"34"},{"size":908,"mtime":1648442397360,"results":"61","hashOfConfig":"34"},{"size":611,"mtime":1649172028246,"results":"62","hashOfConfig":"34"},{"size":299,"mtime":1649083746528,"results":"63","hashOfConfig":"34"},{"size":376,"mtime":1643717882457,"results":"64","hashOfConfig":"34"},{"size":6834,"mtime":1649176753792,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1k1k7g6",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Code\\fyp\\frontend\\src\\index.js",[],["140","141"],"D:\\Code\\fyp\\frontend\\src\\App.js",["142"],"import { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/footer\";\nimport \"./App.css\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main>\n        <Container>\n          {/* <Routes> */}\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n\n          {/* </Routes> */}\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\Code\\fyp\\frontend\\src\\store.js",[],"D:\\Code\\fyp\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\Code\\fyp\\frontend\\src\\screens\\PaymentScreen.js",["143","144"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\nfunction PaymentScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 step3 />\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group>\r\n            <Form.Label as=\"legend\">Select Payment Method</Form.Label>\r\n            <div className=\"col\">\r\n              <Form.Check\r\n                type=\"radio\"\r\n                label=\"KHALTI\"\r\n                id=\"KHALTI\"\r\n                name=\"paymentMethod\"\r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n                checked\r\n              ></Form.Check>\r\n            </div>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\" className=\"my-4 rounded\">\r\n            Pay\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentScreen;\r\n","D:\\Code\\fyp\\frontend\\src\\screens\\ProductScreen.js",["145","146"],"import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductDetails } from \"../actions/productActions\";\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nfunction ProductScreen({ match, history }) {\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n  const [qty, setQty] = useState(1);\r\n  const [visible, setVisible] = useState(true);\r\n  const setVisibility = () => setVisible(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?quantity=${qty}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\" my-5\">\r\n      <Link to=\"/\" className=\"btn btn-light my-4\">\r\n        <button className=\"btn btn-dark rounded \">Back to Home</button>\r\n      </Link>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <div class=\"alert alert-danger\" role=\"alert\">\r\n          {error}\r\n        </div>\r\n      ) : (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img\r\n              src={product.image}\r\n              alt={product.name}\r\n              title={product.name}\r\n              className=\"img-fluid rounded\"\r\n            ></img>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={\r\n                    product.numReviews > 0\r\n                      ? `${product.numReviews} reviews`\r\n                      : \"This product has not been reviewed\"\r\n                  }\r\n                  color={\"#ff7000\"}\r\n                />\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>Price: $ {product.price}</ListGroup.Item>\r\n\r\n              <ListGroup.Item>{product.description}</ListGroup.Item>\r\n            </ListGroup>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n            <div className=\"card\">\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">Price:</div>\r\n                    <div className=\"col\">\r\n                      <strong>NRP. {product.price}</strong>\r\n                    </div>\r\n                  </div>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">Status:</div>\r\n                    <div className=\"col\">\r\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                    </div>\r\n                  </div>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <div className=\"row my-1\">\r\n                      <div className=\"col my-auto\">Quantity:</div>\r\n                      <div className=\"col\">\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option\r\n                              key={x + 1}\r\n                              value={x + 1}\r\n                              className=\"text-center\"\r\n                            >\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </div>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item\r\n                  style={\r\n                    product.countInStock === 0\r\n                      ? { display: \"none\" }\r\n                      : { display: \"block\" }\r\n                  }\r\n                >\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <div className=\"text-center\">\r\n                        <button\r\n                          className={\"btn btn-block btn-primary rounded px-5\"}\r\n                          type=\"button\"\r\n                          disabled={product.countInStock === 0}\r\n                          onClick={addToCartHandler}\r\n                          title=\"Add to Cart\"\r\n                        >\r\n                          <i className=\"fas fa-cart-plus\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"col\">\r\n                      <div className=\"text-center\">\r\n                        <button\r\n                          className={\"btn btn-primary\"}\r\n                          type=\"button\"\r\n                          value={visible}\r\n                          disabled={product.countInStock === 0}\r\n                          onClick={setVisibility}\r\n                        >\r\n                          Goto Cart\r\n                        </button>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductScreen;\r\n","D:\\Code\\fyp\\frontend\\src\\screens\\CartScreen.js",["147"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\nimport { Form, ListGroup } from \"react-bootstrap\";\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n  // console.log(qty);\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  console.log(cartItems);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeItemHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n    console.log(\"Firing\", id);\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"row my-5\">\r\n      <div className=\"col-md-8 bor \">\r\n        <h1>Your Shopping List:</h1>\r\n        {cartItems.length === 0 ? (\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            <h3>Opps! It seems like your cart is Empty.., Shop More by: </h3>{\" \"}\r\n            <Link to=\"/\"> Products </Link>{\" \"}\r\n          </div>\r\n        ) : (\r\n          <ListGroup variant=\"flush\" className=\"mt-5\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <div className=\"row py-4\">\r\n                  <div className=\"col-md-2\">\r\n                    <img src={item.image} className=\"img-fluid rounded\" />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-3\">\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-2\">{item.price}</div>\r\n                  <div className=\"col-md-3\">\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option\r\n                          key={x + 1}\r\n                          value={x + 1}\r\n                          className=\"text-center\"\r\n                        >\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </div>\r\n                  <div className=\"col-md-1\">\r\n                    <button\r\n                      className=\"btn btn-light \"\r\n                      onClick={() =>removeItemHandler(item.product)}\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-trash danger\"\r\n                        title={\"Remove \" + item.name + \" from your cart.\"}\r\n                      ></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"col-md-4\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                <h2>Hello Rohan</h2>\r\n              </li>\r\n\r\n              <li className=\"list-group-item\">\r\n                {\" \"}\r\n                <h5>\r\n                  You have{\" \"}\r\n                  {cartItems.reduce((acc, item) => acc + item.qty, 0)}{\" \"}\r\n                  items in your cart\r\n                </h5>\r\n              </li>\r\n\r\n              <li className=\"list-group-item\">\r\n                <h5>\r\n                  You will be charged an amount as of NRP.{\" \"}\r\n                  {cartItems\r\n                    .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                    .toFixed(2)}\r\n                </h5>\r\n              </li>\r\n\r\n              <li className=\"list-group-item text-center\">\r\n                <button\r\n                  className=\"btn btn-primary rounded \"\r\n                  disabled={cartItems.length === 0}\r\n                  onClick={checkoutHandler}\r\n                >\r\n                  {cartItems.length === 0\r\n                    ? \"Please buy some product\"\r\n                    : \"Proceed to checkout\"}\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","D:\\Code\\fyp\\frontend\\src\\components\\Header.js",["148"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nfunction Header() {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <div>\r\n      <header>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n          <div className=\"container\">\r\n            <LinkContainer to=\"/\">\r\n              <Navbar.Brand>ShopSpot</Navbar.Brand>\r\n            </LinkContainer>\r\n\r\n            <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n            <Navbar.Collapse id=\"navbarScroll\">\r\n              <Nav\r\n                className=\"mr-auto\"\r\n                style={{ maxHeight: \"100px\" }}\r\n                navbarScroll\r\n              >\r\n                <LinkContainer to=\"/cart\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-cart-plus\"></i> Cart\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n\r\n                {userInfo ? (\r\n                  <NavDropdown title={userInfo.name} id=\"username\">\r\n                    <LinkContainer to=\"/profile\">\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <NavDropdown.Item onClick={logoutHandler}>\r\n                      Log Out\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                ) : (\r\n                  <LinkContainer to=\"/login\">\r\n                    <Nav.Link>\r\n                      <i className=\"fab fa-galactic-senate\"></i> Login\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n                )}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </div>\r\n        </Navbar>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\Code\\fyp\\frontend\\src\\components\\footer.js",[],"D:\\Code\\fyp\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\Code\\fyp\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Code\\fyp\\frontend\\src\\screens\\ProfileScreen.js",["149","150","151","152","153","154"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\n// import Message from \"../components/Message\";\r\nimport { getUserDetails,updateUserProfile } from \"../actions/userActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n// import { listMyOrders } from \"../actions/orderActions\";\r\n\r\nfunction ProfileScreen({ history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  // const orderListMy = useSelector((state) => state.orderListMy);\r\n  // const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success || userInfo._id !== user._id) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        // dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password != confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        })\r\n      );\r\n      setMessage(\"Details Changed Successful\");\r\n      \r\n    }\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-3\">\r\n        <h2>User Profile</h2>\r\n\r\n        {message && <h2>{message}</h2>}\r\n        {error && <h2>{error}</h2>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"passwordConfirm\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\" className=\"my-2\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n\r\n      {/* <div className=\"col-md-9\">\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Paid</th>\r\n                <th>Delivered</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\">Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","D:\\Code\\fyp\\frontend\\src\\screens\\ShippingScreen.js",["155"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nexport default function ShippingScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      saveShippingAddress({\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n      })\r\n    );\r\n    history.push(\"/payment\");\r\n  };\r\n  return (\r\n    <div>\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 />\r\n        <div className=\"pt-4\">\r\n          <h1>Shipping Details</h1>\r\n        </div>\r\n        <div className=\" my-5\">\r\n          {\" \"}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"address\" className=\"my-2\">\r\n              <Form.Label>Address:</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter Your Shipping Address\"\r\n                value={address ? address : \" \"}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"city\" className=\"my-2\">\r\n              <Form.Label>City:</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter Your Shipping City\"\r\n                value={city ? city : \" \"}\r\n                onChange={(e) => setCity(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"postalCode\" className=\"my-2\">\r\n              <Form.Label>Zip Code:</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter Your Shipping City\"\r\n                value={postalCode ? postalCode : \" \"}\r\n                onChange={(e) => setPostalCode(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"country\" className=\"my-2\">\r\n              <Form.Label>Area, Zone:</Form.Label>\r\n              <Form.Control\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Enter Your Shipping Area\"\r\n                value={country ? country : \" \"}\r\n                onChange={(e) => setCountry(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\" className=\"my-4 rounded\">\r\n              Go Ahead\r\n            </Button>\r\n          </Form>{\" \"}\r\n        </div>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Code\\fyp\\frontend\\src\\screens\\PlaceOrderScreen.js",["156","157","158","159"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Fade, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, error, success } = orderCreate;\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n\r\n  // Pre added tax\r\n  // cart.itemsPrice = cart.cartItems\r\n  // .reduce(\r\n  //   (acc, item) =>\r\n  //     acc +\r\n  //     item.price * item.quantity -\r\n  //     0.13 * (acc + item.price * item.quantity),\r\n  //   0\r\n  // )\r\n  // .toFixed(2);\r\n\r\n  cart.shippingPrice = (cart.itemsPrice > 1000 ? 0 : 100).toFixed(2);\r\n  cart.taxPrice = Number(0.013 * cart.itemsPrice).toFixed(2);\r\n  cart.totalPrice =\r\n (   Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)).toFixed(2);\r\n\r\n  if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: ORDER_CREATE_RESET }); //on success, this will fire which will remove items from cart\r\n    }\r\n  }, [success, history]);\r\n\r\n  const placeOrder = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8\">\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                <b>Shipping Details:</b>\r\n              </h2>\r\n              <p>\r\n                <b>\r\n                  <i>Your Order will be shipped to:</i>\r\n                  <br />\r\n                </b>\r\n                <strong>\r\n                  <b>\r\n                    {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                    {\" - \"}\r\n                    {cart.shippingAddress.postalCode},\r\n                    {cart.shippingAddress.country}\r\n                  </b>\r\n                </strong>\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>\r\n                <b>Your Chosen Payment Method:</b>\r\n              </h2>\r\n              <p>\r\n                <b>\r\n                  <i>You are making payment with:</i>\r\n                  <br />\r\n                </b>\r\n                <strong>\r\n                  <b>{cart.paymentMethod}</b>\r\n                </strong>\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>\r\n                <b>Your Order Summary:</b>\r\n              </h2>\r\n              <p>\r\n                {/* <b>\r\n                  <i>You are making payment with:</i>\r\n                  <br />\r\n                </b> */}\r\n                <strong>\r\n                  <b>\r\n                    {cart.cartItems.length === 0 ? (\r\n                      \"Your Cart Seems Empty\"\r\n                    ) : (\r\n                      <ListGroup variant=\"flush\">\r\n                        {cart.cartItems.map((item, index) => (\r\n                          <ListGroup.Item key = {index}>\r\n                            <div className=\"row\">\r\n                              <div className=\"col-md-1\">\r\n                                <img\r\n                                  src={item.image}\r\n                                  alt={item.name}\r\n                                  className=\"img-fluid rounded\"\r\n                                  title={item.name}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col\">\r\n                                <Link to={`/product/${item.product}`}>\r\n                                  {item.name}\r\n                                </Link>\r\n                              </div>\r\n                              <div className=\"col-md-4\">\r\n                                {item.qty} x {\"NRP \"}\r\n                                {item.price} = {\"NRP \"}{\" \"}\r\n                                <u>{(item.qty * item.price).toFixed(2)}</u>\r\n                              </div>\r\n                            </div>\r\n                          </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>\r\n                    )}\r\n                  </b>\r\n                </strong>\r\n              </p>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card\">\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <div className=\"row\">\r\n                  <div className=\"col\">Items total:</div>\r\n                  <div className=\"col\">NRP {cart.itemsPrice}</div>\r\n                </div>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <div className=\"row\">\r\n                  <div className=\"col\">VAT | TAX:</div>\r\n                  <div className=\"col\">NRP {cart.taxPrice}</div>\r\n                </div>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <div className=\"row\">\r\n                  <div className=\"col\">Shipping charges:</div>\r\n                  <div className=\"col\">NRP {cart.shippingPrice}</div>\r\n                </div>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <div className=\"row\">\r\n                  <div className=\"col\">Grand Total:</div>\r\n                  <div className=\"col\">NRP {cart.totalPrice}</div>\r\n                </div>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>{error && <h2>{error}</h2>}</ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <div className=\"my-2 mx-auto\">\r\n                  <Button\r\n                    className=\"btn btn-primary rounded\"\r\n                    //   disabled={cart.cartItems !== 0 ? \"False\" : \"True\"}\r\n                    onClick={placeOrder}\r\n                    aria-label={\r\n                      cart.cartItems === 0\r\n                        ? \"Please add some product to your cart\"\r\n                        : \" \"\r\n                    }\r\n                  >\r\n                    Place Order\r\n                  </Button>\r\n                </div>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","D:\\Code\\fyp\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Code\\fyp\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Code\\fyp\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Code\\fyp\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Code\\fyp\\frontend\\src\\components\\product.js",[],"D:\\Code\\fyp\\frontend\\src\\components\\Loader.js",[],"D:\\Code\\fyp\\frontend\\src\\actions\\productActions.js",[],"D:\\Code\\fyp\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Code\\fyp\\frontend\\src\\actions\\cartActions.js",[],"D:\\Code\\fyp\\frontend\\src\\components\\FormContainer.js",[],"D:\\Code\\fyp\\frontend\\src\\components\\Rating.js",[],"D:\\Code\\fyp\\frontend\\src\\actions\\userActions.js",["160"],"import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LOGOUT,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login/\",\r\n      { username: email, password: password },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/register/\",\r\n      { name: name, email: email, password: password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\r\n      `/api/users/${id}/`,\r\n\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/users/profile/update/`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({\r\n    type: USER_LOGOUT,\r\n  });\r\n  dispatch({\r\n    type: USER_DETAILS_RESET,\r\n  });\r\n};\r\n","D:\\Code\\fyp\\frontend\\src\\actions\\orderActions.js",["161"],"D:\\Code\\fyp\\frontend\\src\\constants\\userConstants.js",[],"D:\\Code\\fyp\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Code\\fyp\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Code\\fyp\\frontend\\src\\constants\\productConstants.js",[],"D:\\Code\\fyp\\frontend\\src\\screens\\OrderScreen.js",["162","163","164","165"],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":42,"nodeType":"172","messageId":"173","endLine":2,"endColumn":48},{"ruleId":"170","severity":1,"message":"174","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"175","line":2,"column":24,"nodeType":"172","messageId":"173","endLine":2,"endColumn":27},{"ruleId":"170","severity":1,"message":"176","line":14,"column":10,"nodeType":"172","messageId":"173","endLine":14,"endColumn":17},{"ruleId":"170","severity":1,"message":"177","line":15,"column":9,"nodeType":"172","messageId":"173","endLine":15,"endColumn":22},{"ruleId":"178","severity":1,"message":"179","line":48,"column":21,"nodeType":"180","endLine":48,"endColumn":75},{"ruleId":"170","severity":1,"message":"181","line":3,"column":23,"nodeType":"172","messageId":"173","endLine":3,"endColumn":32},{"ruleId":"170","severity":1,"message":"182","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"170","severity":1,"message":"183","line":3,"column":24,"nodeType":"172","messageId":"173","endLine":3,"endColumn":27},{"ruleId":"170","severity":1,"message":"175","line":3,"column":29,"nodeType":"172","messageId":"173","endLine":3,"endColumn":32},{"ruleId":"170","severity":1,"message":"184","line":3,"column":34,"nodeType":"172","messageId":"173","endLine":3,"endColumn":39},{"ruleId":"170","severity":1,"message":"185","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":23},{"ruleId":"186","severity":1,"message":"187","line":51,"column":18,"nodeType":"188","messageId":"189","endLine":51,"endColumn":20},{"ruleId":"170","severity":1,"message":"174","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"190","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"191","line":3,"column":18,"nodeType":"172","messageId":"173","endLine":3,"endColumn":22},{"ruleId":"170","severity":1,"message":"192","line":3,"column":35,"nodeType":"172","messageId":"173","endLine":3,"endColumn":48},{"ruleId":"193","severity":1,"message":"194","line":46,"column":6,"nodeType":"195","endLine":46,"endColumn":24,"suggestions":"196"},{"ruleId":"170","severity":1,"message":"197","line":17,"column":3,"nodeType":"172","messageId":"173","endLine":17,"endColumn":28},{"ruleId":"170","severity":1,"message":"198","line":11,"column":3,"nodeType":"172","messageId":"173","endLine":11,"endColumn":18},{"ruleId":"170","severity":1,"message":"199","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":16},{"ruleId":"170","severity":1,"message":"192","line":3,"column":29,"nodeType":"172","messageId":"173","endLine":3,"endColumn":42},{"ruleId":"170","severity":1,"message":"200","line":12,"column":10,"nodeType":"172","messageId":"173","endLine":12,"endColumn":18},{"ruleId":"170","severity":1,"message":"201","line":18,"column":41,"nodeType":"172","messageId":"173","endLine":18,"endColumn":51},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Col' is defined but never used.","'visible' is assigned a value but never used.","'setVisibility' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Container' is defined but never used.","'Link' is defined but never used.","'Row' is defined but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Fade' is defined but never used.","'ListGroupItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["204"],"'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'Button' is defined but never used.","'sdkReady' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"207","text":"208"},[1555,1573],"[success, history, order._id, dispatch]"]